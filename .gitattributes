# Auto detect text files and perform LF normalization
* text=auto

# Source code
*.js text eol=lf
*.ts text eol=lf
*.json text eol=lf
*.md text eol=lf
*.yml text eol=lf
*.yaml text eol=lf

# Shell scripts
*.sh text eol=lf

# SQL files
*.sql text eol=lf

# Configuration files
*.conf text eol=lf
*.config text eol=lf
*.ini text eol=lf
*.env text eol=lf
*.example text eol=lf

# Documentation
*.txt text eol=lf
*.md text eol=lf
*.rst text eol=lf

# Docker files
Dockerfile text eol=lf
*.dockerfile text eol=lf

# Git files
.gitignore text eol=lf
.gitattributes text eol=lf

# Binary files
*.png binary
*.jpg binary
*.jpeg binary
*.gif binary
*.ico binary
*.svg binary
*.pdf binary
*.zip binary
*.tar.gz binary
*.tgz binary

# Font files
*.woff binary
*.woff2 binary
*.ttf binary
*.otf binary
*.eot binary

# Archive files
*.tar binary
*.gz binary
*.bz2 binary
*.xz binary
*.7z binary

# Executable files
*.exe binary
*.dll binary
*.so binary
*.dylib binary

# Database files
*.db binary
*.sqlite binary
*.sqlite3 binary

# Node.js specific
package-lock.json text eol=lf
yarn.lock text eol=lf

# TypeScript
*.ts linguist-language=TypeScript
*.tsx linguist-language=TypeScript

# Mark vendor code
node_modules/** linguist-vendored
dist/** linguist-generated
build/** linguist-generated
coverage/** linguist-generated

export {
  MCPManifest,
  MCPTool,
  MCPResource,
  MCPToolCall,
  MCPToolResult,
  MCPContent,
  MCPMessage,
  UpstreamServer,
  GatewayConfig,
  CompanyProfile,
  ConversationState,
  AuthToken,
  PromptPointer,
  PromptSeed
};

